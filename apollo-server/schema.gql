"Light-weight node definition"
interface Node {
  id: ID!
}

type Line {
  number: Int!
  stanzaBreak: Boolean
  text: String!
}

type Collection implements Node {
  title: String!
}

type Poem implements Node {
  id: ID!
  name: String!
  author: String
  next: Poem
  prev: Poem
  index: Int
  collection: Collection
  lines: [Line]!
}

type Query {
  node(id: ID!): Node
}

input SubmitLineInput {
  poemID: ID!
  lineNum: Int!
  answer: String!
}

type SubmitLine {
  conflicts: [Int]!
}

type RandomPoem {
  poem: Poem!
}

type Mutation {
  randomPoem: RandomPoem!
  submitLine(input: SubmitLineInput!): SubmitLine!
}
